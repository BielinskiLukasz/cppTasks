#include <iostream>

/**
 * Dany utw√≥r powsta≈Ç w wyniku realizowania procesu edukacyjnego w PJATK.
 */
int main() {
    //I. Przygotuj klase Osoba z polami char* imie i int wiek. Nastepnie utw√≥rz dwa obiekty zdefiniowanej klasy,
    // uzywajac konstruktor√≥w wykorzystujacych mechanizmy: dynamicznego alokowania pamieci oraz lokalnej definicji.


    //II. Rozwin definicje klasy Osoba o konstruktory:
    // pusty ‚Äì wprowadzajacy wartosci p√≥l do dynamicznie alokowanych zasob√≥w,
    // przyjmujacy dwa parametry (char*, int) ‚Äì inicjujacy pola przez liste inicjacyjna.
    // Oba z konstruktor√≥w powinny wyswietlic na ekranie informacje o utworzeniu obiektu Osoba. Dodefiniuj destruktor,
    // wyswietlajacy informacje o zniszczeniu obiektu i zwalniajacy dynamicznie za alokowane zasoby. W ciele funkcji
    // main przedstaw tworzenie obiekt√≥w powyzszej klasy z uzyciem obu typ√≥w konstruktor√≥w.


    //III. Wykorzystujac operator new, utw√≥rz obiekt klasy Osoba i uzywajac funkcji show wyswietl zawarte w nim pola.
    // Utw√≥rz odnosnik ref do tego obiektu, a nastepnie utw√≥rz nowy obiekt klasy Osoba dostarczajac jako parametr
    // konstruktora odnosnika ref. Ponownie wyswietl stany p√≥l wszystkich utworzonych obiekt√≥w. Usun pierwszy z
    // utworzonych obiekt√≥w i wyswietl stan p√≥l pozosta≈Çego obiektu.


    //IV. Zdefiniuj klase Rachunek zawierajaca pola Osoba wlasciciel (zdefiniowana na poprzednich zajeciach) oraz double
    // stan_konta. Nastepnie utw√≥rz klase Bank przechowujaca obiekty klasy Rachunek i pozwalajaca na wywo≈Çanie funkcji:
    // otworzNowyRachunek - tworzaca nowy rachunek dla wskazanego klienta,
    // zmienWlasciciela - modyfikujaca Osobe bedaca w≈Çascicielem rachunku,
    // usunRachunek - kasujaca rachunek.
    // W programie nalezy zadbac aby wszystkie obiekty zawiera≈Çy zdefiniowane i funkcjonalne:
    // konstruktory,
    // destruktory.
    //Przedstaw dzia≈Çanie programu na przyk≈Çadzie Pana Tomka, kt√≥ry za≈Çozy≈Ç trzy rachunki i wp≈Çaci≈Ç na nie po 100 z≈Ç.
    // Nastepnie jeden rachunek przepisa≈Ç na ma≈Çzonke Ma≈Çgorzate, a drugi usuna≈Ç. Przy kazdej z tych operacji bank
    // wyswietla≈Ç na konsoli wszystkie posiadane rachunki, wraz z imieniem klienta i stanem konta.


}