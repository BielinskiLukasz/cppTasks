#include <iostream>

using std::cout, std::endl;

void pointersToVariable();

void pointersToPointers();

void fruits();

/**
 * Dany utw√≥r powsta≈Ç w wyniku realizowania procesu edukacyjnego w PJATK.
 */
int main() {
    //I. Przedstaw deklaracje zmiennych typ√≥w char, double i int, po czym utw√≥rz wskazniki do tych zmiennych.
    // Nastepnie wyswietl na ekranie wszystkie zadeklarowane zmienne.
    char a = 'b';
    double c = 1.2;
    int d = 3;

    char *e = &a;
    double *f = &c;
    int *g = &d;

    cout << "char " << a << " char* " << e << endl; // wska≈∫nik char pokazuje ciƒÖg znak√≥w (tablica znak√≥w, je≈ºeli jest
    // to pojedynczy znak to pokazuje dany znak oraz kolejne znaki a≈º do osiƒÖgniƒôcia d≈Çugo≈õci wska≈∫nika char
    // (zale≈ºne od kompilatora)
    cout << "double " << c << " double* " << f << endl;
    cout << "int " << d << " int* " << g << endl;

    //II. Przedstaw program w kt√≥rym dwa wskazniki (ptr1 i ptr2) beda pokazywa≈Çy te sama zmienna. Nastepnie zmodyfikuj
    // wartosc wskazywana przez zmienna ptr1 i wyswietl zmienna i wartosci wskazywane przez wskazniki.
    pointersToVariable();

    //III. Zadeklaruj zmienna typu int o nazwie wrt, wskaznik do zmiennej wrt o nazwie ptr1 i wskaznik do zmiennej ptr1
    // o nazwie ptr2. Wyswietl wartosci i stany wszystkich utworzonych zmiennych.
    pointersToPointers();

    //IV. Zadeklaruj typ wyliczeniowy opisujacy owoce, natepnie przedstaw deklaracje zmiennych, ich inicjacje
    // i wyswietlenie wartosci.
    fruits();

    //V. Dany jest ciag znak√≥w ‚Äúfantasmagoria‚Äù przechowywany w zmiennej tab. Utw√≥rz wskazniki ptr1 i ptr2 pokazujace
    // odpowiednio pierwszy i ostatni znak ciagu tab. Nastepnie wypisz na ekranie wyniki operacji matematycznych + i -.


    //VI. Dana jest statyczna tablica zmiennych typu char o rozmiarze 100 element√≥w. Napisz program, kt√≥ry wprowadzi
    // do tej tablicy dowolny (nieseparowalny znakami bia≈Çymi) ciag znak√≥w wprowadzony z klawiatury. Nastepnie
    // dla kazdego znaku z wprowadzonego ciagu znajdzie wszystkie kolejne wystapienia znak√≥w o tej samej wartosci,
    // utworzy do nich wskazniki i wypisze na ekran odleg≈Çosci w postaci:
    //  a0 - a11 -> odleg≈Çosc 5.


    //VII. Zaimplementuj funkcje int mystrlen(char*) zwracajaca d≈Çugosc dostarczonego ciagu znak√≥w. Program powinien
    // przedstawiac wykorzystanie arytmetyki wskaznik√≥w.


    //VIII. Zaimplementuj funkcje bool isPalindrom(char*) zwracajaca wartosc 1 jezeli dostarczony ciag znak√≥w
    // jest palindromem lub 0 w przeciwnym przypadku.


    //IX. Dany jest wskaznik do ciagu znak√≥w ‚ÄúAla ma kota, a kot ma ale‚Äù. Napisz program przedstawiajacy dzia≈Çanie
    // funkcji kt√≥ra:
    // podzieli ciag na wyrazy,
    // kazdy z wyraz√≥w przechowa w oddzielnej tablicy znak√≥w,
    // wszystkie wyrazy przechowa w oddzielnej tablicy s≈Ç√≥w zwracanej jako wynik funkcji.
    //W ca≈Çym programie mozna wykorzystywac jedynie funkcje zaimplementowane przez siebie, ponadto do tablic mozna
    // odwo≈Çac sie jedynie za pomoca wskaznik√≥w.


}

void pointersToVariable() {
    int wrt = 2;
    int *ptr1 = &wrt;
    int *ptr2 = &wrt;

    cout << "value " << wrt << " - pointer1 " << *ptr1 << " & pointer2 " << *ptr2 << endl;
    wrt = 5;
    cout << "value " << wrt << " - pointer1 " << *ptr1 << " & pointer2 " << *ptr2 << endl;
}

void pointersToPointers() {
    int wrt = 2;
    int *ptr1 = &wrt;
    int **ptr2 = &ptr1;

    cout << "value " << wrt << endl;
    cout << "pointer1 " << ptr1 << " - value " << *ptr1 << endl;
    cout << "pointer2 " << ptr2 << " - value " << *ptr2 << " & deeper value " << **ptr2 << endl;
}

void fruits() {
    enum fruit {
        orange = 0, apple = 1, pineapple = 2, pear = 3, banana = 4
    };

    fruit jablko = apple;
    fruit banan = orange;
    banan = banana;

    cout << "jablko - " << jablko << " & banan - " << banana << endl;
}
